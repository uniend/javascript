

문자열 메소드 



1. 문자열 주위 공백 제거 
    trim()

2. 문자열 대소문자 변환 
   - toUpperCase()  // 대문자 변환 
   - toLowerCase()  // 대소문자 변환 






--------------------------------------------------------------------- > 배열과 유사 

3. 문자열 위치(인덴스) 찾기 

   - indexOf()
   - lastindexOf() 

    ex) let str = 'abcdefg'
        str.indexOf('ab') // 0 var str = "abcDEFabc";
        str.indexOf('abc');     // 0  -> 자바스크립트에서 인덱스는 0부터 시작함.
        str.indexOf('abcd');    // -1 -> 문자열을 비교할 때 문자의 대소문자를 구분함.
        str.indexOf('abc', 3);  // 6  -> 인덱스 3부터 'abc'를 찾기 시작함.
        str.lastIndexOf('abc'); // 6
        str.lastIndexOf('d');   // -1 // 없으면 -1을 반환 
        str.lastIndexOf('c');   // 8


4. 인덱스로 문자값 반환 받기 

   - charAt()
   - charCodeAt()
   - charPointAt()

   ex) 
   var str = "abcDEFabc";
   str.charAt(0);      // a
   str.charAt(10);     // 빈 문자열 -> 전달받은 인덱스가 문자열의 길이보다 클 경우에는 빈 문자열을 반환함.
   str.charCodeAt(0);  // 97        -> 'a'에 해당하는 UTF-16 코드를 반환함.
   str.codePointAt(0); // 97        -> 'a'에 해당하는 유니코드 코드 포인트를 반환함.



  5. 문자열 추출 

   -  slice()
      - 시작 인덱스부터 종료 인덱스 바로 앞까지의 문자열만을 추출한다. 
      - 추출한 문자열로 새로운 문자열을 생성한다. 

  ex) 
  var str = "abcDEFabc";
  str.slice(2, 6);     // cDEF     -> 인덱스 2부터 인덱스 5까지의 문자열을 추출함.
  str.slice(-4, -2);   // Fa       -> 음수로 전달된 인덱스는 문자열의 뒤에서부터 시작함.
  str.slice(2);        // abcDEFab -> 인수로 종료 인덱스가 전달되지 않으면 문자열의 마지막까지 추출함.



  6. 문자열 분리 

   - split()
   - 구분자(separator)를 기준으로 나눈 후, 나뉜 문자열을 하나의 새로운 배열로 반환
   -- 배열에서 사용불가 
  
  ex) 
  var str = "자바스크립트는 너무 멋져요! 그리고 유용해요.";
  str.split();    // 구분자를 명시하지 않으면 아무런 동작도 하지 않음.
  str.split("");  // 한 문자("")씩 나눔.
  str.split(" "); // 띄어쓰기(" ")를 기준으로 나눔.
  str.split("!"); // 느낌표("!")를 기준으로 나눔.



  7. 문자열 결합 

   - concat()
      -전달받은 문자열을 결합한 새로운 문자열을 반환
      \
  
  ex) 
  var str = "자바스크립트";
  str;   // 자바스크립트
  str.concat("는 너무 멋져요!");   // 자바스크립트는 너무 멋져요!
  str.concat("는 너무 멋져요!", " 그리고 유용해요."); // 자바스크립트는 너무 멋져요! 그리고 유용해요!
  str;     // 자바스크립트

 8. 