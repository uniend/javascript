

배열 메소드 


< 원본 직접 수정 메소드  >

1. pop : 마지막제거, 제거요소 반환 
2. shift : 처음 요소 제거, 제거요소 반환 
3. push : 마지막에 추가, 총 길이 반환 
4. unshift :  처음요소 추가 , 총길이 반호나 
5. reverse :  뒤집기 
6. sort :  오름차순 ,내림차순 정렬 
7. splice : 내용변경, ( 삽입될 인덱스의 위치, 갯수, 교체될 내용1, 교체될내용2 ) 개수에 0을 넣으면 삭제x , 원본수정하며 삭제된 내용을 반환한다. 



< 새로운 배열을 반환하는 메소드 >

1  배열의 모든요소를 문자열로 반환하기 :  join ( 구분자 전달 )
2. 배열의 모든 요소를 문자열로 반환하기 :  toString() / 구분자를 전달 못함 
3. 추출하여 하나의 새로운 배열 반환하기 :  slice(시작인덱스, 종료인덱스) 
                                        - 종료 인덱스 바로앞까지만 추출
                                        - 종료인덱스 없으면 끝까지 
                                        - 인수에 아무것도 안넣으면 처음부터 /끝까지 새로운배열로 복사 
4. 하나로 합쳐 새로운 배열 반환하기 : concat(합칠거, 합칠꺼)
5. 순회하며 각 요소에 콜백함수 실행후 결과를 모아 새로운 배열로 반환 :  map 
6. 순회하며 조건에 맞는 요소만을 모아 새로운 배열을 반환 : filter 


< 원본x 값을 반환하는 메소드 >
1. 모든요소를 순회하며 조건에 맞는 첫번째 요소를 반환 , 없을시 undefined 반환 하는 메소드 find((num) => {num})
2. 모든 요소를 순회하며, 누적값을 반환한다. reduce((누적값,현재값) => {동작}, 초기값)
   ㄴ 초기값에 빈 배열을 넣으면 누적값에 빈 배열이 들어가게 되어 조건에 맞는 빈 배열을 생성해낼 수있다. 


<filter와 find의 차이>
- filter는 배열을 반환 
- find는 조건에 맞는 첫번쨰 요소만 딱 하나 반환 



< 반환 값이 없는 순회하며 각 요소에 대한 작업을 진행하는 메소드 >
1. 반복문 :  forEach( (요소,index, arr) => { console.log(요소)} ) // 반복문처럼 모든 요소를 순회하며 요소마다 콜백함수를 실행한다. 

<특이사항>
문자형 메소드의 문자형을 구분자로 구분해 새로운 배열로 반환하는 split()는 배열에서 사용불가 


----------------------------------
[ 자주 쓰는 메소드 ]
1. map : 모든요소 순회하며 각 요소에 특정기능을 수행한후 새로운 배열 반환 
2. filter : 모든 요소 순회하며 각 요소에 조건이 맞는 요소를 새로운 배열 반환 
3. finde :  filter와 동일하게 모든 요소를 순회하지만 배열이 아닌 첫번째 요소의 값만 반환 하며 없으면 undefined



[ 짝궁 메소드]
1. join/ split 
2. indexof/ charAt
3. [추출:slice,내용편집:splice]
4. filter/ find 
5. for, forEach
6. min/max
7. floor/trunc
8. Number/parseInt/parseFloat
9. inNaN/Array.isArray()
10. map/reduce 